@model Northwind.Store.Model.Region

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="region" class="form-horizontal">
        <h4>Region</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RegionID)
        @Html.HiddenFor(model => model.RowVersion)

        <div class="form-group">
            @Html.LabelFor(model => model.RegionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegionDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Se crea el manejador el evento para cuando se efectuan cambios de datos
        $(".form-control").change(function () {
            // Se agrega evidencia del cambio para ser enviado como parte del POST
            // Se confirma que no se haya agregado previamente
            if (!$("input:hidden[value=" + $(this).prop("name") + "]").length) {
                $("#region").append("<input type='hidden' name='ModifiedProperties' value=" +
                    $(this).prop("name") + ">");
            }
        });
    </script>
}
